name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:
    # Permite executar o workflow manualmente

env:
  AZURE_RESOURCE_GROUP: whitelabel-rg
  AZURE_CONTAINER_APP_NAME: whitelabel-app
  CONTAINER_REGISTRY: whitelabelacr
  DOCKER_IMAGE_NAME: whitelabel
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }},${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:latest
          
      - name: Deploy to Azure Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          containerAppName: ${{ env.AZURE_CONTAINER_APP_NAME }}
          imageToDeploy: ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          environmentVariables: |
            NODE_ENV=production
            PORT=3000
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_SSL=${{ secrets.DB_SSL }}